
/**
 * Card公式表
 */
// =================================== 导入
import { Formula } from "app/mod/formula";Formula.set("3-(f.brain?1*(f.brain/Math.abs(f.brain)):1)",function(db, f, t, card, scene, buff,af){return 3-(f.brain?1*(f.brain/Math.abs(f.brain)):1);});Formula.set("4.5-(f.brain?1.5*(f.brain/Math.abs(f.brain)):1.5)",function(db, f, t, card, scene, buff,af){return 4.5-(f.brain?1.5*(f.brain/Math.abs(f.brain)):1.5);});Formula.set("['cards_hand','cards_scrap',0,1,0,0,1,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_hand','cards_scrap',0,1,0,0,1,0,0];});Formula.set("['cards_draw','cards_hand',0,0,0,1,1,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_draw','cards_hand',0,0,0,1,1,0,0];});Formula.set("['cards_draw','cards_hand',0,0,0,2,2,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_draw','cards_hand',0,0,0,2,2,0,0];});Formula.set("['cards_hand','cards_expend',0,1,0,0,1,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_hand','cards_expend',0,1,0,0,1,0,0];});Formula.set("f.brain",function(db, f, t, card, scene, buff,af){return f.brain;});Formula.set("f.brain",function(db, f, t, card, scene, buff,af){return f.brain;});Formula.set("2+af.addboom",function(db, f, t, card, scene, buff,af){return 2+af.addboom;});Formula.set("2+f.addboom",function(db, f, t, card, scene, buff,af){return 2+f.addboom;});Formula.set("3+af.addboom",function(db, f, t, card, scene, buff,af){return 3+af.addboom;});Formula.set("3+f.addboom",function(db, f, t, card, scene, buff,af){return 3+f.addboom;});Formula.set("f.boom",function(db, f, t, card, scene, buff,af){return f.boom;});Formula.set("f.boom",function(db, f, t, card, scene, buff,af){return f.boom;});Formula.set("f.boom*4",function(db, f, t, card, scene, buff,af){return f.boom*4;});Formula.set("-f.boom",function(db, f, t, card, scene, buff,af){return -f.boom;});Formula.set("t.boom*4",function(db, f, t, card, scene, buff,af){return t.boom*4;});Formula.set("f.boom*6",function(db, f, t, card, scene, buff,af){return f.boom*6;});Formula.set("t.boom*6",function(db, f, t, card, scene, buff,af){return t.boom*6;});Formula.set("[0,'cards_draw 1',0,0,0,1,1,200003,0]",function(db, f, t, card, scene, buff,af){return [0,'cards_draw 1',0,0,0,1,1,200003,0];});Formula.set("f.cards_hand_all>1",function(db, f, t, card, scene, buff,af){return f.cards_hand_all>1;});Formula.set("f.cold",function(db, f, t, card, scene, buff,af){return f.cold;});Formula.set("-f.cold",function(db, f, t, card, scene, buff,af){return -f.cold;});Formula.set("2*f.cold",function(db, f, t, card, scene, buff,af){return 2*f.cold;});Formula.set("Math.round(Math.min(Math.max((card.damage+f.brain+card.attach_damage)*(1+f.add_damage+t.vulnerability/10)*(1-f.un_attack)*(1-t.un_true_damage/10)*(1-t.un_damage/10)*(1+(1-Math.pow(0,t.cold))*2)-f.cold,f.min_damage),t.max_damage || 999999))",function(db, f, t, card, scene, buff,af){return Math.round(Math.min(Math.max((card.damage+f.brain+card.attach_damage)*(1+f.add_damage+t.vulnerability/10)*(1-f.un_attack)*(1-t.un_true_damage/10)*(1-t.un_damage/10)*(1+(1-Math.pow(0,t.cold))*2)-f.cold,f.min_damage),t.max_damage || 999999));});Formula.set("f.cold",function(db, f, t, card, scene, buff,af){return f.cold;});Formula.set("f.cold",function(db, f, t, card, scene, buff,af){return f.cold;});Formula.set("['cards_draw','cards_hand',0,0,0,3,3,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_draw','cards_hand',0,0,0,3,3,0,0];});Formula.set("['cards_draw','cards_hand',0,0,0,3,3,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_draw','cards_hand',0,0,0,3,3,0,0];});Formula.set("['cards_hand','cards_scrap',0,1,0,0,3,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_hand','cards_scrap',0,1,0,0,3,0,0];});Formula.set("['cards_draw','cards_hand',0,0,0,4,4,0,0]",function(db, f, t, card, scene, buff,af){return ['cards_draw','cards_hand',0,0,0,4,4,0,0];});